We derive Benford's law from the geometric analysis of the trajectory for a ball on a circular billiard table. From this approach, the universality of the law becomes immediately apparent. We show it for the powers of two, but any exponentially growing sequence will do. Finally, since the exponential growth is scale invariant, it can be heuristically transferred to data that stretches over a large range.

contents:

0:00 Introduction
0:30 Branding
1:00 Circular Billiard Table with rational angles
1:30 Star shapes
2:00 Irrational angles
2:30 Computation with Logarithms
3:00 Benford's law
3:30 Applications


References:
The cinematic effects are inspired by
https://youtu.be/F8pqNeVam54 @Polyfjord
The proof is found in from
Tabachnikov, S. (2005). Geometry and billiards. http://num.math.uni-goettingen.de/~summer/tabachnikov_billiardsgeometry.pdf

The code displayed in the video is here:

import os
import numpy as np

def scan_files_with_sizes_recursive(directory, max_number=np.Inf):
    results = {}
    for root, dirs, files in os.walk(directory):
        for name in files:
            file = os.path.join(root, name)
            try:
                size = os.path.getsize(file)
            except OSError:
                continue
            results[file] = size
            if len(results) > max_number:
                return results
    return results


if __name__ == '__main__':
    directory = '/usr'
    results = scan_files_with_sizes_recursive(directory, max_number=1000)
    digits = {}
    total = 0
    for size in results.values():
        d = int(str(size)[0])
        if d > 0:
            digits.update({d: digits.get(d, 0) + 1})
            total += 1
    for d in range(1, 10):
        print(f"{d}: {digits[d] / total:.2f} <-> {np.log((d + 1) / d) / np.log(10):.2f}")

And the code for the animations is at my github repo:
https://github.com/mathelehrer/BlenderMathAnim

For more questions, you can contact me at:
https://discord.gg/qYaB5CwUEn